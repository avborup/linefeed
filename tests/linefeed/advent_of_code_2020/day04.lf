fn is_valid(key, val) {
  match key {
    "byr" => 1920 <= int(val) and int(val) <= 2002,
    "iyr" => 2010 <= int(val) and int(val) <= 2020,
    "eyr" => 2020 <= int(val) and int(val) <= 2030,
    "hgt" => {
      num, unit = val.find(/^(\d+)(cm|in)$/n) or (return false);
      (unit == "cm" and 150 <= num and num <= 193)
        or (unit == "in" and 59 <= num and num <= 76)
    },
    "hcl" => val.is_match(/^#[0-9a-f]{6}$/),
    "ecl" => val.is_match(/amb|blu|brn|gry|grn|hzl|oth/),
    "pid" => val.is_match(/^\d{9}$/),
  }
};

part1, part2 = (0, 0);
required_fields = ["byr", "iyr", "eyr", "hgt", "hcl", "ecl", "pid"];

for passport in input().split("\n\n") {
  fields = {};
  for f in passport.find_all(/(\w+):(\S+)/) {
    fields[f[0]] = f[1];
  };

  part1 += 1 if all([req in fields for req in required_fields]);
  part2 += 1 if all([req in fields and is_valid(req, fields[req]) for req in required_fields]);
};

print("Part 1: " + part1);
print("Part 2: " + part2);
