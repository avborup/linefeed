part1, part2 = (0, 0);

fn is_valid(key, val, orig) {
  # // TODO: Make dictionaries
  # rules = {
  #   "byr": fn(val) 1920 <= val and val <= 2002,
  #   "iyr": fn(val) 2010 <= val and val <= 2020,
  #   "eyr": fn(val) 2020 <= val and val <= 2030,
  #   ...
  # };

  if key == "byr" {
    1920 <= int(val) and int(val) <= 2002
  } else if key == "iyr" {
    2010 <= int(val) and int(val) <= 2020
  } else if key == "eyr" {
    2020 <= int(val) and int(val) <= 2030
  } else if key == "hgt" {
    rhs = (orig.split(":"))[1];
    res = rhs.find(/^(\d+)(cm|in)$/n);
    return false if res == null;
    num, unit = res;
    return 150 <= num and num <= 193 if unit == "cm";
    return 59 <= num and num <= 76 if unit == "in";
  } else if key == "hcl" {
    (orig.split(":"))[1].is_match(/^#[0-9a-f]{6}$/)
  } else if key == "ecl" {
    val.is_match(/amb|blu|brn|gry|grn|hzl|oth/)
  } else if key == "pid" {
    rhs = (orig.split(":"))[1];
    rhs.is_match(/^\d{9}$/)
  }
};

for passport in input().split("\n\n") {
  fields = passport.find_all(/(\w+):(\S+)/);

  all_fields = true;
  all_valid = true;
  for req in ["byr", "iyr", "eyr", "hgt", "hcl", "ecl", "pid"] {
    present = false;
    valid = false;
    for field in fields {
      key, val, orig = field;
      if key == req {
        valid = is_valid(key, val, orig);
        present = true;
        break;
      };
    };

    if not present {
      all_fields = false;
    };
    if not valid {
      all_valid = false;
    };
  };

  part1 += 1 if all_fields;
  part2 += 1 if all_valid;
};

print("Part 1: " + part1);
print("Part 2: " + part2);
