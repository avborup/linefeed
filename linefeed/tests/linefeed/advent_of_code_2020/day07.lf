fwd, bwd = defaultmap([]), defaultmap([]);
for line in input().lines() {
  color, _ = line.find(r/(.*) bags contain/);
  for num, child in line.find_all(r/(\d+) (.*?) bag/) {
    fwd[color].append((int(num), child));
    bwd[child].append((int(num), color));
  };
};

fn reach(color, reachable) {
  reachable.add(color);
  for _, parent in bwd[color] {
    reach(parent, reachable)
  };
};

fn count(c) {
  1 + sum([num * count(child) for num, child in fwd[c]])
};

reach("shiny gold", (reachable = set()));

print("Part 1:", reachable.len() - 1);
print("Part 2:", count("shiny gold") - 1);
